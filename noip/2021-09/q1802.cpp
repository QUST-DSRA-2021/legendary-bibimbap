#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>

using namespace std;
using namespace __gnu_cxx;

int m, f[1001];

/**
 * (这可能是我第一次在自己的程式里面用注释写思路 (・8・) )
 * 但我自己觉得能想到这一步还蛮神奇的
 * 其实我第一点想到的是，红色的彩带与白色的彩带是对称关系，
 * 把某一个方案中所有的红白彩带互换，那么这个方案仍然成立。
 * 也就是说，在所有的方案当中，红色与白色彩带是主要的成分，
 * 而蓝色彩带不过是在其中穿插的。
 *
 * 在题干的提示当中，对于 `m=4` 的情形给出了一共四种方案：
 * 白红白 红蓝白 白蓝红 红白红
 *
 * 再仔细观察一步，在种种限制之下就会使问题变为，
 * ***轮流使用白色与红色彩带铺满橱窗，在白色与红色彩带之间可以也可以不穿插蓝色彩带***
 *
 * 这就是经典的「爬楼梯」问题啊，只不过由于红白彩带的对称性，最后的结果是爬楼梯的两倍。
 * 列出状态转移方程如下：
 *
 * f[x] = 1,               x = 1
 *        2,               x = 2
 *        f[x-1] + f[x-2], otherwise
 *
 * 此外，还需要注意的是，由于第一条红白彩带也在m条彩带的范畴之内，
 * 所以我们真正研究的是，攀爬 (m - 1) 阶楼梯的情形，
 * 而那第一条红白彩带就相当于爬楼梯当中的「地面」。
 */

int main(int argc, char *argv[]) {
    scanf("%d", &m);
    f[0] = 1;
    f[1] = 1;
    for (int k = 2; k <= m-1; ++k)
        f[k] = f[k-1] + f[k-2];
    printf("%d\n", f[m-1] * 2);
    return 0;
}
